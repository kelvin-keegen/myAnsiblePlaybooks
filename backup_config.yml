---
- name: Setup Custom Backup Script with Exclude File for Automated Backups
  hosts: all
  become: yes
  become_user: root
  vars:
    ansible_ssh_port: "{{ some_ssh_int }}"
    ansible_become_pass: "{{ random_pass }}"
    regular_user: "{{ normal_user }}"  # User who owns the backup directory
    backup_dir: "/home/{{ regular_user }}/backups"  # Directory for script backups
    backup_script: "/home/{{ regular_user }}/scripts/system_backup_restore.sh"  # Path to the backup script
    exclude_file: "{{ backup_dir }}/exclude.txt"  # Path to the exclude file
    time_hour: "{{ cron_hour }}"
    time_minute: "{{ cron_minute }}"
    cron_time: "{{ time_minute }} {{ time_hour }} * * *"  # Cron schedule (daily)
    nfs_server: "{{ nas_ip }}"
    nfs_share: "{{ nas_dataset }}"
    mount_point: "{{ backup_dir }}"
    script_url: "{{ script_link }}"
    log_file: "{{ backup_dir }}/backup.log"  # Log file for the backup script
    exclusions:
      - "{{ backup_dir }}"
      - "/dev"
      - "/proc"
      - "/sys"
      - "/tmp"
      - "/run"
      - "/mnt"
      - "/media"
      - "/lost+found"
      - "/swapfile"
      - "/var/lib/docker"
      - ".cache"

  tasks:
    - name: Ensure dependencies are installed
      apt:
        name: rsync
        state: present
        update_cache: yes

    - name: Create backup directory
      file:
        path: "{{ backup_dir }}"
        state: directory
        owner: "{{ regular_user }}"
        group: "{{ regular_user }}"
        mode: "0755"

    - name: Create exclude.txt with specified exclusions
      copy:
        dest: "{{ exclude_file }}"
        content: |
          {% for path in exclusions %}
          {{ path }}
          {% endfor %}
        owner: "{{ regular_user }}"
        group: "{{ regular_user }}"
        mode: "0644"

    - name: Ensure the mount point exists
      file:
        path: "{{ mount_point }}"
        state: directory
        mode: '0755'

    - name: Add NFS mount entry to /etc/fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^{{ nfs_server }}:{{ nfs_share }}'
        line: "{{ nfs_server }}:{{ nfs_share }} {{ mount_point }} nfs defaults 0 0"
        state: present
        backup: yes  # Optional: create a backup of fstab before modifying it

    - name: Mount the NFS share
      mount:
        name: "{{ mount_point }}"
        src: "{{ nfs_server }}:{{ nfs_share }}"
        fstype: nfs
        state: mounted
        opts: defaults

    - name: Download the custom backup script
      get_url:
        url: "{{ script_url }}"  # Replace with your script URL
        dest: "{{ backup_script }}"
        owner: root
        group: root
        mode: '0755'

    - name: Schedule daily backup with cron
      cron:
        name: "Daily Custom Backup"
        user: root
        minute: "{{ time_minute }}"
        hour: "{{ time_hour }}"
        job: "/bin/bash {{ backup_script }} {{ backup_dir }} backup"

    - name: Display success message
      debug:
        msg: "Backup script setup complete! Backups will run daily at {{ cron_time }} in {{ backup_dir }}. Exclusions are configured in {{ exclude_file }}."
